---
apiVersion: v1
kind: Secret
metadata:
  name: redash
  labels:
    app: redash
type: Opaque
data:
  cookieSecret: {{#pass_b64}}redash/cookie-secret{{/pass_b64}}
  postgresql: {{#pass_b64}}redash/postgresql{{/pass_b64}}

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: redash
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redash
    spec:
      containers:
      - name: redash-server
        image: 242986192236.dkr.ecr.eu-west-1.amazonaws.com/playcom-redash:{{NAMESPACE}}
        imagePullPolicy: Always
        command: ["/app/bin/docker-entrypoint", "server"]
        env:
        - name: K8S_REDEPLOY_WORKAROUND
          value: '{{REPLACEME}}'

        - name: POSTGRE_HOST
          value: playclips.cd4tvtfrvhs7.eu-west-1.rds.amazonaws.com
        - name: POSTGRE_DBNAME
          value: redash
        - name: POSTGRE_USER
          value: redash
        - name: POSTGRE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redash
              key: postgresql
        - name: REDIS_HOST
          # value: playclips-redis.qys5ta.0001.euw1.cache.amazonaws.com
          value: redis.default

        - name: REDASH_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: redash
              key: cookieSecret

        - name: REDASH_DATABASE_URL
          value: "postgresql://$(POSTGRE_USER):$(POSTGRE_PASSWORD)@$(POSTGRE_HOST)/$(POSTGRE_DBNAME)"
        - name: REDASH_REDIS_URL
          value: "redis://:@$(REDIS_HOST):6379/{{REDIS_DB}}"

        - name: PYTHONUNBUFFERED
          value: "0"
        - name: REDASH_LOG_LEVEL
          value: "INFO"
        - name: REDASH_FEATURE_ALLOW_CUSTOM_JS_VISUALIZATIONS
          value: "true"
        - name: REDASH_ADDITIONAL_QUERY_RUNNERS
          value: "redash.query_runner.script,redash.query_runner.python"

        - name: REDASH_WEB_WORKERS
          value: "8 --preload"  #XXX we inject the --preload option into gunicorn
        - name: REDASH_ALLOW_PARAMETERS_IN_EMBEDS  #!!! we need to be careful with parameters in queries
          value: "false"
        - name: REDASH_ALLOW_SCRIPTS_IN_USER_INPUT
          value: "true"

        ports:
          - containerPort: 5000

        livenessProbe:
          exec:
            command:
            - /app/manage.py
            - status
          # Redash can take a while to come up initially, so we delay checks.
          initialDelaySeconds: 90
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /static/images/redash_icon_small.png
            port: 5000
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: 2Gi  # redash is a bit heavy on the memory side

      # Runs all queries (scheduled and triggered from the UI or via API)
      - name: redash-workers
        image: 242986192236.dkr.ecr.eu-west-1.amazonaws.com/playcom-redash:{{NAMESPACE}}
        imagePullPolicy: Always
        command: ["/app/bin/docker-entrypoint", "scheduler"]
        env:
        - name: K8S_REDEPLOY_WORKAROUND
          value: '{{REPLACEME}}'

        - name: POSTGRE_HOST
          value: playclips.cd4tvtfrvhs7.eu-west-1.rds.amazonaws.com
        - name: POSTGRE_DBNAME
          value: redash
        - name: POSTGRE_USER
          value: redash
        - name: POSTGRE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redash
              key: postgresql
        - name: REDIS_HOST
          # value: playclips-redis.qys5ta.0001.euw1.cache.amazonaws.com
          value: redis.default

        - name: REDASH_DATABASE_URL
          value: "postgresql://$(POSTGRE_USER):$(POSTGRE_PASSWORD)@$(POSTGRE_HOST)/$(POSTGRE_DBNAME)"
        - name: REDASH_REDIS_URL
          value: "redis://:@$(REDIS_HOST):6379/{{REDIS_DB}}"

        - name: PYTHONUNBUFFERED
          value: "0"
        - name: REDASH_LOG_LEVEL
          value: "INFO"
        - name: REDASH_FEATURE_ALLOW_CUSTOM_JS_VISUALIZATIONS
          value: "true"
        - name: REDASH_ADDITIONAL_QUERY_RUNNERS
          value: "redash.query_runner.script,redash.query_runner.python"

        - name: QUEUES
          value: "scheduled_queries,queries,celery"
        - name: WORKERS_COUNT
          value: "8"

---
apiVersion: v1
kind: Service
metadata:
  name: redash
  labels:
    app: redash
spec:
  selector:
    app: redash
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
      name: http

---
# Certificate via cert-manager
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: redash-k8s-playcom-com
spec:
  acme:
    config:
    - domains:
      - redash.k8s.playcom.com{{NS_SUFFIX}}
      http01:
        ingressClass: nginx
  dnsNames:
  - redash.k8s.playcom.com{{NS_SUFFIX}}
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  secretName: redash-k8s-playcom-com-tls

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: redash
spec:
  tls:
  - secretName: redash-k8s-playcom-com-tls
    hosts:
    - redash.k8s.playcom.com{{NS_SUFFIX}}

  rules:
  - host: redash.k8s.playcom.com{{NS_SUFFIX}}
    http:
      paths:
      - path: /
        backend:
          serviceName: redash
          servicePort: http
